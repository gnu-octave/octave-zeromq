MKOCTFILE := @MKOCTFILE@
OCTAVE_CONFIG := @OCTAVE_CONFIG@
GREP      ?= @GREP@
CXXFLAGS  := @CXXFLAGS@ @DEFS@
LIBS      := @LIBS@
LDFLAGS   := @LDFLAGS@

ARCHDIR   := "$(shell $(OCTAVE_CONFIG) -p CANONICAL_HOST_TYPE)-$(shell $(OCTAVE_CONFIG) -p API_VERSION)"

SRC := socket_class.cc bind.cc close.cc connect.cc disconnect.cc errno.cc \
       getsockopt.cc globals.cc poll.cc recv.cc send.cc setsockopt.cc \
       socket.cc strerror.cc unbind.cc version.cc properties.cc zeromq.cc \
       has.cc z85_encode.cc z85_decode.cc curve_keypair.cc curve_public.cc pkglock.cc


OBJ := $(SRC:.cc=.o)

.PHONY: all
all: @TARGETS@

%.o: %.cc
	$(MKOCTFILE) -c $< $(CXXFLAGS)

CC_TST_SOURCES := $(shell $(GREP) --files-with-matches '^%!' $(SRC))
TST_SOURCES := $(patsubst %.cc,../inst/$(ARCHDIR)/%.cc-tst,$(CC_TST_SOURCES))

.PHONY: archtests
archtests: $(TST_SOURCES)

../inst/$(ARCHDIR):
	@mkdir -p "$@"

../inst/$(ARCHDIR)/%.cc-tst: %.cc | ../inst/$(ARCHDIR)
	@echo "Extracting tests from $< ..."
	@$(RM) -f "$@" "$@-t"
	@(      echo "## Generated from $<"; \
	        $(GREP) '^%!' "$<") > "$@"

zeromq.oct: $(OBJ)
	$(MKOCTFILE) -o zeromq.oct $(OBJ) $(LDFLAGS) $(LIBS)

.PHONY: clean
.PHONY: distclean

clean:
	rm -f *.o
	rm -f *.oct
	test -e ../inst/$(ARCHDIR) && rm -f $(TST_SOURCES) || true
	test -e ../inst/$(ARCHDIR) && rmdir ../inst/$(ARCHDIR) || true

distclean: clean
	rm -rf autom4te.cache
	rm -f Makefile config.status config.log config.h configure
